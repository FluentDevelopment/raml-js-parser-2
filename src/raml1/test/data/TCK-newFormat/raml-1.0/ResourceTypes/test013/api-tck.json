{
  "specification": {
    "uses": [
      {
        "key": "lib",
        "value": "library.raml",
        "path": "api.raml"
      }
    ],
    "types": [
      {
        "name": "Example",
        "displayName": "Example",
        "type": [
          "string"
        ],
        "__METADATA__": {
          "primitiveValuesMeta": {
            "displayName": {
              "calculated": true
            },
            "type": {
              "insertedAsDefault": true
            }
          }
        },
        "mediaType": "application/raml+yaml",
        "typePropertyKind": "TYPE_EXPRESSION",
        "path": "api.raml"
      }
    ],
    "traits": [
      {
        "responses": [
          {
            "code": "200",
            "body": [
              {
                "name": "application/json",
                "displayName": "application/json",
                "type": [
                  "<<resourcePathName|!uppercamelcase>>"
                ],
                "__METADATA__": {
                  "primitiveValuesMeta": {
                    "displayName": {
                      "calculated": true
                    }
                  }
                },
                "mediaType": "application/raml+yaml",
                "typePropertyKind": "TYPE_EXPRESSION",
                "path": "hasResponseCollection.raml"
              }
            ],
            "path": "hasResponseCollection.raml"
          }
        ],
        "name": "hasResponseCollection",
        "usage": "Use this trait for resources whose response body is a collection of items",
        "path": "hasResponseCollection.raml"
      },
      {
        "responses": [
          {
            "code": "200",
            "body": [
              {
                "name": "application/json",
                "displayName": "application/json",
                "type": [
                  "<<resourcePathName|!uppercamelcase>>"
                ],
                "__METADATA__": {
                  "primitiveValuesMeta": {
                    "displayName": {
                      "calculated": true
                    }
                  }
                },
                "mediaType": "application/raml+yaml",
                "typePropertyKind": "TYPE_EXPRESSION",
                "path": "hasResponseCollection.raml"
              }
            ],
            "path": "hasResponseCollection.raml"
          }
        ],
        "name": "lib.hasResponseCollection",
        "usage": "Use this trait for resources whose response body is a collection of items",
        "__METADATA__": {
          "calculated": true
        },
        "path": "hasResponseCollection.raml"
      }
    ],
    "resourceTypes": [
      {
        "methods": [
          {
            "is": [
              "lib.hasResponseCollection"
            ],
            "description": "Get all <<resourcePathName|!uppercamelcase>>,\noptionally filtered\n",
            "method": "get",
            "path": "collection.raml"
          },
          {
            "is": [
              "hasResponseCollection"
            ],
            "description": "Create a <<resourcePathName|!uppercamelcase>>\n",
            "method": "post",
            "path": "collection.raml"
          }
        ],
        "description": "A collection of <<resourcePathName|!uppercamelcase>>",
        "name": "collection",
        "path": "collection.raml"
      }
    ],
    "title": "My API",
    "resources": [
      {
        "methods": [
          {
            "responses": [
              {
                "code": "200",
                "body": [
                  {
                    "name": "application/json",
                    "displayName": "application/json",
                    "type": [
                      "Example"
                    ],
                    "__METADATA__": {
                      "primitiveValuesMeta": {
                        "displayName": {
                          "calculated": true
                        }
                      }
                    },
                    "mediaType": "application/raml+yaml",
                    "typePropertyKind": "TYPE_EXPRESSION",
                    "path": "hasResponseCollection.raml"
                  }
                ],
                "path": "hasResponseCollection.raml"
              }
            ],
            "is": [
              "lib.hasResponseCollection"
            ],
            "description": "Get all Example,\noptionally filtered\n",
            "method": "get",
            "parentUri": "/example",
            "absoluteParentUri": "/example",
            "path": "collection.raml"
          },
          {
            "responses": [
              {
                "code": "200",
                "body": [
                  {
                    "name": "application/json",
                    "displayName": "application/json",
                    "type": [
                      "Example"
                    ],
                    "__METADATA__": {
                      "primitiveValuesMeta": {
                        "displayName": {
                          "calculated": true
                        }
                      }
                    },
                    "mediaType": "application/raml+yaml",
                    "typePropertyKind": "TYPE_EXPRESSION",
                    "path": "hasResponseCollection.raml"
                  }
                ],
                "path": "hasResponseCollection.raml"
              }
            ],
            "is": [
              "hasResponseCollection"
            ],
            "description": "Create a Example\n",
            "method": "post",
            "parentUri": "/example",
            "absoluteParentUri": "/example",
            "path": "collection.raml"
          }
        ],
        "type": "collection",
        "description": "A collection of Example",
        "relativeUri": "/example",
        "displayName": "/example",
        "__METADATA__": {
          "primitiveValuesMeta": {
            "displayName": {
              "calculated": true
            }
          }
        },
        "relativeUriPathSegments": [
          "example"
        ],
        "absoluteUri": "/example",
        "completeRelativeUri": "/example",
        "parentUri": "",
        "absoluteParentUri": "",
        "path": "api.raml"
      }
    ],
    "path": "api.raml"
  },
  "ramlVersion": "RAML10",
  "type": "Api",
  "errors": []
}